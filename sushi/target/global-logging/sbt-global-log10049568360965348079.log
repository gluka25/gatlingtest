[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\manakova.g\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\manakova.g\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 13.0.1)
[debug]       Load.loadUnit: plugins took 100.9096ms
[debug]       Load.loadUnit: defsScala took 0.2288ms
[debug] [Loading] Scanning directory C:\Users\manakova.g\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\manakova.g\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.6412 ms
[debug]           Load.resolveProject(global-plugins) took 38.0974ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\manakova.g\.sbt\1.0\plugins, plugins: List(<none>))) took 81.2916ms
[debug] [Loading] Done in C:\Users\manakova.g\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 103.0416ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2237ms
[debug]     Load.loadUnit(file:/C:/Users/manakova.g/.sbt/1.0/plugins/, ...) took 211.494ms
[debug]   Load.apply: load took 389.7818ms
[debug]   Load.apply: resolveProjects took 7.3009ms
[debug]   Load.apply: finalTransforms took 68.6694ms
[debug]   Load.apply: config.delegates took 11.1746ms
[debug]   Load.apply: Def.make(settings)... took 977.0507ms
[debug]   Load.apply: structureIndex took 158.7571ms
[debug]   Load.apply: mkStreams took 1.446ms
[info] loading global plugins from C:\Users\manakova.g\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3624.1323ms
[debug]           Load.loadUnit: plugins took 60.7776ms
[debug]           Load.loadUnit: defsScala took 0.0032ms
[debug] [Loading] Scanning directory C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi\project
[debug]             Load.loadUnit: mkEval took 5.9331ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3248 ms
[info] loading settings for project sushi-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(sushi-build) took 21.8637ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sushi-build, base: C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi\project, plugins: List(<none>))) took 24.9821ms
[debug] [Loading] Done in C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi\project, returning: (sushi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4045.9244ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.333ms
[debug]         Load.loadUnit(file:/C:/Users/manakova.g/Desktop/load/gatling/testsushi/sushi/project/, ...) took 4124.2122ms
[debug]       Load.apply: load took 4126.607ms
[debug]       Load.apply: resolveProjects took 0.1003ms
[debug]       Load.apply: finalTransforms took 36.173ms
[debug]       Load.apply: config.delegates took 0.333ms
[debug]       Load.apply: Def.make(settings)... took 205.4481ms
[debug]       Load.apply: structureIndex took 39.9676ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8243.5811ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi
[debug]       Load.loadUnit: mkEval took 0.3899ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(io.gatling.sbt.GatlingPlugin), Atom(sbtassembly.AssemblyPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(io.gatling.sbt.GatlingPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbtassembly.AssemblyPlugin,io.gatling.sbt.GatlingPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.6918 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 50.4208ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi, plugins: List(<none>))) took 56.4437ms
[debug] [Loading] Done in C:\Users\manakova.g\Desktop\load\gatling\testsushi\sushi, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4720.3291ms
[debug]     Load.loadUnit: cleanEvalClasses took 113.3545ms
[debug]   Load.loadUnit(file:/C:/Users/manakova.g/Desktop/load/gatling/testsushi/sushi/, ...) took 13078.3465ms
[debug] Load.apply: load took 13080.8593ms
[debug] Load.apply: resolveProjects took 0.0951ms
[debug] Load.apply: finalTransforms took 27.4065ms
[debug] Load.apply: config.delegates took 6.8129ms
[debug] Load.apply: Def.make(settings)... took 273.632ms
[debug] Load.apply: structureIndex took 60.8821ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to sushi (in build file:/C:/Users/manakova.g/Desktop/load/gatling/testsushi/sushi/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 40318 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 40318, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to sushi (in build file:/C:/Users/manakova.g/Desktop/load/gatling/testsushi/sushi/)
[debug] > Exec(idea-shell, None, None)
